generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

type User {
  id: ID!
  email: String!
  encryptedPassword: String!
  Name: String!
  studentNumber: String!
  phoneNumber: String!
  university: String!
  major: String!
  isMaster: Club
  notifications: [Notification]
  applications: [Application]
  rooms: [Room]
  clubs: [Club]
  auth: Boolean
}
model Club {
  id Int @id @default(autoincrement())
  name String @default('')
  bio String @default('')
  description String @default('')
  type String @default('교양')
  members User[]
  clubImage String
  logoImage String
  questions Question[]
  applications Application[]
  application_description String @default('')
  posts Post[]
  masterId Int 
  clubAddInfo ClubAddInfo
  user User @relation(field:[master], references:[id])
}

model ClubAddInfo {
  id Int @id @default(autoincrement())
  party Boolean
  partyDay String
  phoneNumber String
  socialUrl String[]
  union Boolean
  numberOfMembers Int
  Email String
  clubId Int
  user User @relation(field:[clubId], references:[id])
}

type Room {
  id: ID!
  participants: [User!]!
  messages: [Message!]!
}

type Message {
  id: ID!
  text: String!
  from: User!
  to: User!
  room: Room!
  created: DateTime!
}

model Question {
  id Int @id @default(autoincrement())
  subject String
  type String
  options String[]
  clubId Int
  club Club @relation(field:[clubId], references:[id])
}

model Application {
  id Int @id @default(autoincrement())
  answer String[]
  status String
  createdAt DateTime @default(now())
  userId: User!
  clubId: Club!
  user User @relation(field:[userId], references:[id])
  club Club @relation(field:[clubId], references:[id])
}

model Post {
  id Int @id @default(autoincrement())
  title String
  content String?
  files String[]
  type String
  status String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  user: User
  club: Club!
}

